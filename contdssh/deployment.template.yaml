apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: containerssh
  name: containerssh
  namespace: containerssh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: containerssh
  template:
    metadata:
      labels:
        app: containerssh
    spec:
      automountServiceAccountToken: true
      # securityContext:
      #   runAsNonRoot: true
      #   readOnlyRootFilesystem: true
      containers:
      - name: containerssh
        #image: containerssh/containerssh:0.4.1
        image: containerssh/containerssh:0.5.0-alpha.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 2222
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/containerssh/host.key
          name: hostkey
          readOnly: true
          subPath: host.key
        - mountPath: /etc/containerssh/config.yaml
          name: config
          readOnly: true
          subPath: config.yaml

      - name: containerssh-authconfig
        image: ${auth_server_image}
        env:
          - name: AUTHORIZED_KEYS_FILEPATH
            value: /etc/containerssh/authorized_keys.txt
        volumeMounts:
        - mountPath: /etc/containerssh/authorized_keys.txt
          name: keys
          readOnly: true
          subPath: authorized_keys.txt

      restartPolicy: Always
      serviceAccount: containerssh
      serviceAccountName: containerssh
      volumes:
      - name: hostkey
        secret:
          secretName: ${secret_name}
      - configMap:
          name: containerssh-config
        name: config
      - configMap:
          name: authorized-keys
        name: keys
